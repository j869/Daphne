target = 112272349645850545498219076350673039648623638456905354251335180455997602411951226106445672715644599154622257304196318846548145750797538896745235665980301739626587570031858216121884764402929246570850585807824039491261694056595278793524944676321958286513323786548271094227689095882255960825413412396551980106146036527202335417632137466992920223410107982068488930405364385094018064132392937393876794485091004035361718468433556212326269813697746194790545439303541468495240733521071789064925861976426807261032722294679241264719994484898697155804082796708651989101998704134314517566897343424266458544686327300754965587766668665087975526395501357176633215604846150523591388866660356684483037013610603215616982427201734821868333119349124691017544068035184656980189530141775239594306992981878707636659168506675561883436108304823276319082399573791568975055153305595454378144207614912652576861882304526052744369052727537935384308048233196929017455362845218544348799393668914984671107088698226796802212473798623613654108540391810280348895904157955851095601237628708092895941670758996558665267942284854358262483370947369556194742239535138483611131135230706639052055335644371943791882191301031236183897889715627726624365008401607488728475071062238505803581618448446864395489340738338480212698134009486074291737152816153708917430753607828679636686199356781187250000  # Example target value

def generate_exponents(target, max_base, max_exp):
    best_diff = float('inf')  # Initialize with a very large difference
    best_pair = None  # Store the best (a, b) pair
    
    for a in range(2, max_base + 1):  # Start at 2 to skip 1^x
        for b in range(1, max_exp + 1):
            current_value = a ** b
            diff = abs(current_value - target)  # Absolute difference
            
            if diff < best_diff:  # Check if this is the closest so far
                best_diff = diff
                best_pair = (a, b)
                print(f"New best pair: {best_pair}, Difference: {best_diff}")
    
    return best_pair  # Return the best (a, b) pair after all checks

# Example call
best_a, best_b = generate_exponents(target, 499, 500)
print(f"Best pair: base={best_a}, exponent={best_b}")